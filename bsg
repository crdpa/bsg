#!/bin/bash
#  _  _ _|  _   _
# (_ | (_| |_) (_|
#          |    
# top.md is what appears above the blog index and bottom.md below the index.
# it needs a style.css file in the root directory of the website

command -v pandoc >/dev/null 2>&1 || { echo >&2 "Pandoc not installed. Aborting."; exit 1; }

head=top.md
end=bottom.md
pandoc='pandoc --quiet -s --title=crdpa --highlight-style zenburn -c'
css='/styles.css'

if [ -f blog.md ]; then
    rm blog.md
    printf -- "# // devaneios\n" > blog.md
else
    printf -- "# // devaneios\n" > blog.md
fi

if [ -f tmp.md ]; then
    rm tmp.md
    touch tmp.md
else
    touch tmp.md
fi

# function that creates an index of posts
blog () {
        d="${f2:12:2}"
        m="${f2:10:2}"
        y="${yy:2}"
        if [ -f "$f2" ] && [ ! -f "${f2::-3}.html" ]; then
            $pandoc "$css" -o "${f2::-3}.html" "$f2"
        else
            already_exist="${f2:5:-3}"
            echo "$already_exist already converted to html"
        fi
        link_text=$(echo "${f2::-3}" | sed 's:.*/::' | cut -c 7-)
        printf -- "- %s%s%s | [%s](%s)\n" "$d" "$m" "$y" "$link_text" "${f2::-3}.html" >> tmp.md
}

# loop through all the markdown files writing the index
for f1 in "blog/"*; do
    yy="${f1: -4}"
    for f2 in "blog/$yy/"*.md; do
        blog
    done
done

# turn the index upside down
tac tmp.md >> blog.md
rm tmp.md

if [ -f "$head" ]; then
    {
        cat "$head"
    	echo ""
    	cat blog.md
    } > index.md
else
    cat blog.md > index.md
fi

if [ -f "$end" ]; then
    {
        echo ""
    	cat "$end"
    } >> index.md
fi

$pandoc styles.css -o index.html index.md

echo "Done..."
              
